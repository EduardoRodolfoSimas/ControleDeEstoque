@page "/Categoria"

@inject ICategoriaService CategoriaService
@rendermode InteractiveServer
@using Blazorise.DataGrid
@using Blazorise
@using ControleDeEstoque.DTOs.CategoriaDto
@using ControleDeEstoque.Services.ICategoriaService

@if (categorias == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div style="display: inline;">
        <h3 style="display: inline;">Categorias</h3>
        <h5 style="display: inline;"> | Gerenciamento de Categorias</h5>
    </div>
    <Row>
        <Column>
            <Card Margin="Margin.Is4.OnY">
                <CardBody>
                    <Div class="d-flex justify-content-end mb-2">
                        <Div>
                            <Button Color="Color.Success" Clicked="AbrirModalAdicionarCategoria">Nova Categoria</Button>
                            <Button Color="Color.Warning" Disabled="(_categoriaDtoSelecionada is null)" Clicked="() => AbrirModalAtualizarCategoria(_categoriaDtoSelecionada)">Atualizar</Button>
                            <Button Color="Color.Danger" Disabled="(_categoriaDtoSelecionada is null)" Clicked="() => OptionDeleteCategoriaButton(_categoriaDtoSelecionada)">Excluir</Button>
                        </Div>
                    </Div>
                    <DataGrid TItem="CategoriaDto"
                              Data="categorias"
                              @bind-SelectedRow="_categoriaDtoSelecionada"
                              Striped="true"
                              Bordered="true"
                              Hoverable="true"
                              CommandMode="DataGridCommandMode.ButtonRow"
                              EditMode="DataGridEditMode.Popup">
                        <DataGridColumns>
                            <DataGridColumn TItem="CategoriaDto" Field="@nameof(CategoriaDto.Nome)" Caption="Nome" Editable />
                            <DataGridColumn TItem="CategoriaDto" Field="@nameof(CategoriaDto.Descricao)" Caption="Descrição" Editable />
                        </DataGridColumns>
                    </DataGrid>
                </CardBody>
            </Card>
        </Column>
    </Row>
}

<Modal @ref="modalCriarCategoria">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Adicionar uma nova categoria</strong>
        </ModalHeader>
        <ModalBody>
            <Field>
                <Label for="CategoriaNome" class="form-label">Nome</Label>
                <input type="text" class="form-control" id="CategoriaNome" @bind-value="NovoCategoriaNome" placeholder="Insira o nome da categoria"/>
                <Label for="CategoriaDescricao" class="form-label">Descrição</Label>
                <input type="text" class="form-control" id="CategoriaDescricao" @bind-value="NovoCategoriaDescricao" placeholder="Insira a descrição da categoria"/>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Success" @onclick="InsertCategoriaButton">Salvar</Button>
            <Button Color="Color.Danger" @onclick="CancelCategoriaButton">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalAtualizarCategoria">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Atualizar Categoria</strong>
        </ModalHeader>
        <ModalBody>
            <Field>
                <Label for="CategoriaNome" class="form-label">Nome</Label>
                <input type="text" class="form-control" id="CategoriaNome" @bind-value="NovoCategoriaNome" placeholder="Insira o nome da categoria"/>
                <Label for="CategoriaDescricao" class="form-label">Descrição</Label>
                <input type="text" class="form-control" id="CategoriaDescricao" @bind-value="NovoCategoriaDescricao" placeholder="Insira a descrição da categoria"/>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Success" @onclick="UpdateCategoriaButton">Salvar</Button>
            <Button Color="Color.Danger" @onclick="CancelCategoriaButton">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalDeletarCategoria">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Deletar Categoria</strong>
        </ModalHeader>
        <ModalBody>
            @if (_categoriaDtoSelecionada != null)
            {
                <p>Tem certeza que deseja deletar a categoria @_categoriaDtoSelecionada.Nome?</p>
            }
        </ModalBody>
        <ModalFooter>
            <Button class="btn btn-danger" @onclick="DeleteCategoriaButton">Deletar</Button>
            <Button class="btn btn-secondary" @onclick="CancelCategoriaButton">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code
{
    private List<CategoriaDto> categorias;
    private Modal modalCriarCategoria = new Modal();
    private Modal modalAtualizarCategoria = new Modal();
    private Modal modalDeletarCategoria = new Modal();
    private CategoriaDto _categoriaDtoSelecionada;
    private string NovoCategoriaNome;
    private string NovoCategoriaDescricao;

    protected override async Task OnInitializedAsync()
    {
        categorias = await CategoriaService.ListarCategorias();
    }

    private void AbrirModalAdicionarCategoria()
    {
        NovoCategoriaNome = string.Empty;
        NovoCategoriaDescricao = string.Empty;
        modalCriarCategoria.Show();
    }

    private void AbrirModalAtualizarCategoria(CategoriaDto categoriaDto)
    {
        _categoriaDtoSelecionada = categoriaDto;
        NovoCategoriaNome = categoriaDto.Nome;
        NovoCategoriaDescricao = categoriaDto.Descricao;
        modalAtualizarCategoria.Show();
    }

    private void CancelCategoriaButton()
    {
        NovoCategoriaNome = string.Empty;
        NovoCategoriaDescricao = string.Empty;
        modalCriarCategoria.Hide();
        modalAtualizarCategoria.Hide();
        modalDeletarCategoria.Hide();
    }

    private async Task InsertCategoriaButton()
    {
        CategoriaDto categoriaDto = new CategoriaDto
        {
            Nome = NovoCategoriaNome,
            Descricao = NovoCategoriaDescricao,
        };
        await CategoriaService.AdicionarCategoria(categoriaDto);
        categorias = await CategoriaService.ListarCategorias();
        modalCriarCategoria.Hide();
    }

    private async Task UpdateCategoriaButton()
    {
        _categoriaDtoSelecionada.Nome = NovoCategoriaNome;
        _categoriaDtoSelecionada.Descricao = NovoCategoriaDescricao;
        await CategoriaService.AtualizarCategoria(_categoriaDtoSelecionada);
        categorias = await CategoriaService.ListarCategorias();
        modalAtualizarCategoria.Hide();
    }

    private void OptionDeleteCategoriaButton(CategoriaDto categoriaDto)
    {
        _categoriaDtoSelecionada = categoriaDto;
        modalDeletarCategoria.Show();
    }

    private async Task DeleteCategoriaButton()
    {
        await CategoriaService.DeletarCategoria(_categoriaDtoSelecionada.Id);
        categorias = await CategoriaService.ListarCategorias();
        modalDeletarCategoria.Hide();
    }
}
