@page "/Categoria"
@using Blazorise
@using ControleDeEstoque.Model
@using ControleDeEstoque.Services.ICategoriaService
@inject ICategoriaService CategoriaService

<h3>Cadastro de Categorias</h3>

@if (categorias == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Código</th>
            <th>Nome</th>
            <th>Descrição</th>
            <th>
                <button class="btn btn-success" @onclick="OpenAddCategoriaModal">Registrar Categoria</button>
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var categoria in categorias)
        {
            <tr>
                <td>@categoria.Id</td>
                <td>@categoria.Nome</td>
                <td>@categoria.Descricao</td>
                <td>
                    <button class="btn btn-warning" @onclick="() => OpenUpdateCategoriaModal(categoria)">Atualizar</button>
                    <button class="btn btn-danger" @onclick="() => OpenDeleteCategoriaModal(categoria)">Deletar</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

<Modal @ref="modalCriarCategoria">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Adicionar uma nova categoria</strong>
        </ModalHeader>
        <ModalBody>
            <Field>
                <Label for="CategoriaNome" class="form-label">Nome</Label>
                <input type="text" class="form-control" id="CategoriaNome" @bind="NovoCategoriaNome"
                       placeholder="Insira o nome da categoria"/>
                <Label for="CategoriaDescricao" class="form-label">Descrição</Label>
                <input type="text" class="form-control" id="CategoriaDescricao" @bind="NovoCategoriaDescricao"
                       placeholder="Insira a descrição da categoria"/>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Success" @onclick="InsertCategoria">Salvar</Button>
            <Button Color="Color.Danger" @onclick="CloseModalCriarCategoria">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalAtualizarCategoria">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Atualizar categoria</strong>
        </ModalHeader>
        <ModalBody>
            <Field>
                <Label for="CategoriaNome" class="form-label">Nome</Label>
                <input type="text" class="form-control" id="CategoriaNome" @bind="AtualizarCategoriaNome"
                       placeholder="Insira o nome da categoria"/>
                <Label for="CategoriaDescricao" class="form-label">Descrição</Label>
                <input type="text" class="form-control" id="CategoriaDescricao" @bind="AtualizarCategoriaDescricao"
                       placeholder="Insira a descrição da categoria"/>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Success" @onclick="UpdateCategoria">Salvar</Button>
            <Button Color="Color.Danger" @onclick="CloseModalAtualizarCategoria">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalDeletarCategoria">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Deletar categoria</strong>
        </ModalHeader>
        <ModalBody>
            @if (_categoriaDtoSelecionada != null)
            {
                <p>Tem certeza que deseja deletar a categoria <strong>@_categoriaDtoSelecionada.Nome</strong>?</p>
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Danger" @onclick="DeleteCategoria">Deletar</Button>
            <Button Color="Color.Secondary" @onclick="CloseModalDeletarCategoria">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private List<CategoriaDto> categorias;
    private Modal modalCriarCategoria;
    private Modal modalAtualizarCategoria;
    private Modal modalDeletarCategoria;
    private CategoriaDto _categoriaDtoSelecionada;
    private string NovoCategoriaNome;
    private string NovoCategoriaDescricao;
    private string AtualizarCategoriaNome;
    private string AtualizarCategoriaDescricao;

    protected override async Task OnInitializedAsync()
    {
        await CarregarCategorias();
    }

    private async Task CarregarCategorias()
    {
        categorias = await CategoriaService.ListarCategorias();
    }

    private void OpenAddCategoriaModal()
    {
        NovoCategoriaNome = string.Empty;
        NovoCategoriaDescricao = string.Empty;
        modalCriarCategoria.Show();
    }

    private async Task InsertCategoria()
    {
        var categoriaDto = new CategoriaDto
        {
            Nome = NovoCategoriaNome,
            Descricao = NovoCategoriaDescricao,
        };

        await CategoriaService.AdicionarCategoria(categoriaDto);
        await CarregarCategorias();
        modalCriarCategoria.Hide();
    }

    private void OpenUpdateCategoriaModal(CategoriaDto categoria)
    {
        _categoriaDtoSelecionada = categoria;
        AtualizarCategoriaNome = categoria.Nome;
        AtualizarCategoriaDescricao = categoria.Descricao;
        modalAtualizarCategoria.Show();
    }

    private async Task UpdateCategoria()
    {
        if (_categoriaDtoSelecionada != null)
        {
            _categoriaDtoSelecionada.Nome = AtualizarCategoriaNome;
            _categoriaDtoSelecionada.Descricao = AtualizarCategoriaDescricao;

            await CategoriaService.AtualizarCategoria(_categoriaDtoSelecionada);
            await CarregarCategorias();
            modalAtualizarCategoria.Hide();
        }
    }

    private void OpenDeleteCategoriaModal(CategoriaDto categoria)
    {
        _categoriaDtoSelecionada = categoria;
        modalDeletarCategoria.Show();
    }

    private async Task DeleteCategoria()
    {
        if (_categoriaDtoSelecionada != null)
        {
            await CategoriaService.DeletarCategoria(_categoriaDtoSelecionada.Id);
            await CarregarCategorias();
            modalDeletarCategoria.Hide();
        }
    }

    private void CloseModalCriarCategoria() => modalCriarCategoria.Hide();
    private void CloseModalAtualizarCategoria() => modalAtualizarCategoria.Hide();
    private void CloseModalDeletarCategoria() => modalDeletarCategoria.Hide();
}
