@page "/produto"
@using Blazorise.DataGrid
@using ControleDeEstoque.DTOs.CategoriaDto
@using ControleDeEstoque.DTOs.ProdutoDto
@using ControleDeEstoque.DTOs.TamanhoDto
@using ControleDeEstoque.Services.ICategoriaService
@using ControleDeEstoque.Services.IProdutoService
@using ControleDeEstoque.Services.ITamanhos
@inject IProdutoService ProdutoService
@inject ICategoriaService CategoriaService
@inject ITamanhoService TamanhoService

<PageTitle>Gerenciamento de Produtos</PageTitle>

<Button Color="Color.Primary" Clicked="AbrirModalParaCriacao">Adicionar Produto</Button>
<!--
    <Modal @bind-Visible="modalVisivel">
    <ModalHeader>
        <h4>@(produtoEditando.Id == Guid.Empty ? "Criar Produto" : "Editar Produto")</h4>
    </ModalHeader>

    <ModalBody>
        <EditForm Model="produtoEditando" OnValidSubmit="SalvarProduto">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <TextEdit @bind-Value="produtoEditando.Nome" Placeholder="Nome do Produto" />
            <NumericEdit TValue="decimal" @bind-Value="produtoEditando.ValorUnitario" Placeholder="Preço do Produto" />
            <Select TValue="Guid" @bind-Value="produtoEditando.CategoriaId" Data="categorias" TextField="Nome" ValueField="Id" />
            <Select TValue="Guid" @bind-Value="produtoEditando.TamanhoId" Data="tamanhos" TextField="Descricao" ValueField="Id" />
            <Button Type="submit" Color="Color.Primary">Salvar</Button>
        </EditForm>
    </ModalBody>

    <ModalFooter>
        <Button Color="Color.Secondary" Clicked="FecharModal">Cancelar</Button>
    </ModalFooter>
</Modal>
-->
<DataGrid Data="produtos" TItem="ProdutoDto" ShowPager="true" PageSize="10">
    <Columns>
        <DataGridColumn TItem="ProdutoDto" Field="Nome" Caption="Nome" />
        <DataGridColumn TItem="ProdutoDto" Field="ValorUnitario" Caption="Preço" />
        <DataGridColumn TItem="ProdutoDto" Field="CategoriaNome" Caption="Categoria" />
        <DataGridColumn TItem="ProdutoDto" Field="TamanhoNome" Caption="Tamanho" />
        <DataGridCommandColumn TItem="ProdutoDto" Caption="Ações">
            <Commands>
                <DataGridCommandButton CommandName="Edit" Color="Color.Info" Icon="fa fa-edit" Clicked="() => AbrirModalParaEdicao(item)" />
                <DataGridCommandButton CommandName="Delete" Color="Color.Danger" Icon="fa fa-trash" Clicked="() => ExcluirProduto(item)" />
            </Commands>
        </DataGridCommandColumn>
    </Columns>
</DataGrid>

@code {
    private ProdutoDto produtoEditando = new ProdutoDto();
    private bool modalVisivel = false;
    private List<ProdutoDto> produtos = new();
    private List<CategoriaDto> categorias = new();
    private List<TamanhoDto> tamanhos = new();

    protected override async Task OnInitializedAsync()
    {
        await CarregarDados();
    }

    private async Task CarregarDados()
    {
        produtos = await ProdutoService.ListarProdutos();
        categorias = await CategoriaService.ListarCategorias();
        tamanhos = await TamanhoService.ListarTamanhos();
    }

    private async Task SalvarProduto()
    {
        if (produtoEditando.Id == Guid.Empty)
        {
            await ProdutoService.AdicionarProduto(produtoEditando);
        }
        else
        {
            await ProdutoService.AtualizarProduto(produtoEditando);
        }

        FecharModal();
        await CarregarDados();
    }

    private async Task ExcluirProduto(ProdutoDto produtoDto)
    {
        var confirmacao = await Task.FromResult(true); // Substituir por confirmação visual
        if (confirmacao)
        {
            await ProdutoService.DeletarProduto(produtoDto.Id);
            await CarregarDados();
        }
    }

    private void AbrirModalParaCriacao()
    {
        produtoEditando = new ProdutoDto();
        modalVisivel = true;
    }

    private void AbrirModalParaEdicao(ProdutoDto produtoDto)
    {
        produtoEditando = new ProdutoDto
        {
            Id = produtoDto.Id,
            Nome = produtoDto.Nome,
            ValorUnitario = produtoDto.ValorUnitario,
            CategoriaId = produtoDto.CategoriaId,
            TamanhoId = produtoDto.TamanhoId,
            Quantidade = produtoDto.Quantidade,
            CategoriaNome = produtoDto.CategoriaNome,
            TamanhoNome = produtoDto.TamanhoNome
        };
        modalVisivel = true;
    }

    private void FecharModal()
    {
        modalVisivel = false;
        produtoEditando = new ProdutoDto();
    }
}
