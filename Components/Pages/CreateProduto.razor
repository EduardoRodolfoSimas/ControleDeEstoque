@page "/create-produto"
<PageTitle>Criar produto</PageTitle>
@using System.Globalization
@using ControleDeEstoque.Model
@using ControleDeEstoque.Services
@rendermode InteractiveServer
@inject IProdutoService ProdutoService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<h3>Adicionar novo produto</h3>

<div class="mb-3">
    <label for="ProdutoNome" class="form-label">Nome</label>
    <input type="text" class="form-control" id="ProdutoNome" @bind="NovoProdutoNome" />
</div>
<div class="mb-3">
    <label for="ProdutoSku" class="form-label">Código</label>
    <input type="text" class="form-control" id="ProdutoSku" @bind="NovoProdutoSku" />
</div>
<div class="mb-3">
    <label for="ProdutoPreco" class="form-label">Preço Unitário</label>
    <input type="text" class="form-control" id="ProdutoPreco" @bind="NovoProdutoPreco"/></div>
<div class="mb-3">
    <label for="ProdutoQuantidadeEstoque" class="form-label">Quantidade em estoque</label>
    <input type="text" class="form-control" id="ProdutoQuantidadeEstoque" @bind="NovoProdutoQuantidadeEstoque" />
</div>
<div class="mb-3">
    <label for="ProdutoCategoria" class="form-label">Categoria</label>
    <input type="text" class="form-control" id="ProdutoCategoria" @bind="NovoProdutoCategoria" />
</div>


<button class="btn btn-success" @onclick="InsertProduto">Salvar</button>
<button class="btn btn-danger" @onclick="Cancel">Cancelar</button>

@code
{
    
    private string NovoProdutoNome;
    private string NovoProdutoSku;
    private decimal NovoProdutoPreco;
    private int NovoProdutoQuantidadeEstoque;
    private string NovoProdutoCategoria;
    
    private async Task InsertProduto()
    {
        var produto = new Produto
        {
            Nome = NovoProdutoNome,
            Sku = NovoProdutoSku,
            PrecoUnitario = NovoProdutoPreco,
            QuantidadeProduto = NovoProdutoQuantidadeEstoque,
            Categoria = NovoProdutoCategoria
        };
        if (string.IsNullOrEmpty(produto.Nome) || string.IsNullOrEmpty(produto.Sku) || produto.PrecoUnitario == 0)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Por favor, preencha todos os campos obrigatórios.");
        }
        else if (await ProdutoService.SkuExists(produto.Sku))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Já existe um produto com esse código.");
        }   
        else
        {
            await ProdutoService.AddProduto(produto);
            Navigation.NavigateTo("/produto");
            StateHasChanged();   
        }
        
    }
    private void Cancel()
    {
        Navigation.NavigateTo("/produto");
    }
}
