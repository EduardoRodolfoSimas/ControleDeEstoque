@page "/Tamanho"

@inject ITamanhoService TamanhoService
@rendermode InteractiveServer
@using Blazorise.DataGrid
@using Blazorise
@using ControleDeEstoque.DTOs.TamanhoDto
@using ControleDeEstoque.Services.ITamanhos

<h3>Cadastro de Tamanhos</h3>

@if (tamanhos == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <Row>
        <Column>
            <Card Margin="Margin.Is4.OnY">
                <CardHeader>
                    <CardTitle><strong><h3>Lista de Tamanhos</h3></strong></CardTitle>
                </CardHeader>
                <CardBody>
                    <Div class="ms-auto">
                        <Button Color="Color.Primary" @onclick="AbrirModalAdicionarTamanho">Novo Tamanho</Button>
                        <Button Color="Color.Success" Clicked="() => AbrirModalAtualizarTamanho(_tamanhoDtoSelecionado)">Atualizar</Button>
                        <Button Color="Color.Danger" Clicked="() => OptionDeleteTamanhoButton(_tamanhoDtoSelecionado)">Excluir</Button>
                    </Div>
                    <DataGrid TItem="TamanhoDto"
                              Data="tamanhos"
                              @bind-SelectedRow="_tamanhoDtoSelecionado"
                              Striped="true"
                              Editable
                              Responsive
                              ShowPager
                              CommandMode="DataGridCommandMode.ButtonRow"
                              EditMode="DataGridEditMode.Popup">
                        <DataGridColumns>
                                <DataGridCommandColumn  NewCommandAllowed="false" EditCommandAllowed="false" DeleteCommandAllowed="false"  CancelCommandAllowed >
                                    <SaveCommandTemplate>
                                        <Button ElementId="btnSave" Type="ButtonType.Submit" PreventDefaultOnSubmit Color="Color.Primary" Clicked="@context.Clicked">@context.LocalizationString</Button>
                                    </SaveCommandTemplate>
                                    <CancelCommandTemplate>
                                        <Button ElementId="btnCancel" Color="Color.Secondary" Clicked="@context.Clicked">@context.LocalizationString</Button>
                                    </CancelCommandTemplate>
                                </DataGridCommandColumn>
                            <DataGridColumn TItem="TamanhoDto" Field="@nameof(TamanhoDto.Id)" Caption="Código"/>
                            <DataGridColumn TItem="TamanhoDto" Field="@nameof(TamanhoDto.Nome)" Caption="Tamanho" Editable/>
                            <DataGridColumn TItem="TamanhoDto" Field="@nameof(TamanhoDto.Descricao)" Caption="Descrição" Editable/>
                        </DataGridColumns>
                        <ButtonRowTemplate>
                            <Button Color="Color.Primary" Disabled="(_tamanhoDtoSelecionado is null)" Clicked="context.EditCommand.Clicked">Edit</Button>
                            <Button Color="Color.Danger" Disabled="(_tamanhoDtoSelecionado is null)" Clicked="context.DeleteCommand.Clicked">Delete</Button>
                            <Button Color="Color.Link" Clicked="context.ClearFilterCommand.Clicked">Clear Filter</Button>
                        </ButtonRowTemplate>
                    </DataGrid>
                </CardBody>
            </Card>
        </Column>
    </Row>
}

<Modal @ref="modalCriarTamanho">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Adicionar um novo tamanho</strong>
        </ModalHeader>
        <ModalBody>
            <Field>
                <Label for="TamanhoNome" class="form-label">Tamanho</Label>
                <input type="text" class="form-control" id="TamanhoNome" @bind-value="NovoTamanhoNome" placeholder="Insira o nome do tamanho"/>
                <Label for="TamanhoDescricao" class="form-label">Descrição</Label>
                <input type="text" class="form-control" id="TamanhoDescricao" @bind-value="NovoTamanhoDescricao" placeholder="Insira a descrição do tamanho"/>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Success" @onclick="InsertTamanhoButton">Salvar</Button>
            <Button Color="Color.Danger" @onclick="CancelTamanhoButton">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalAtualizarTamanho">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Atualizar Tamanho</strong>
        </ModalHeader>
        <ModalBody>
            <Field>
                <Label for="TamanhoNome" class="form-label">Tamanho</Label>
                <input type="text" class="form-control" id="TamanhoNome" @bind-value="NovoTamanhoNome" placeholder="Insira o nome do tamanho"/>
                <Label for="TamanhoDescricao" class="form-label">Descrição</Label>
                <input type="text" class="form-control" id="TamanhoDescricao" @bind-value="NovoTamanhoDescricao" placeholder="Insira a descrição do tamanho"/>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Success" @onclick="UpdateTamanhoButton">Salvar</Button>
            <Button Color="Color.Danger" @onclick="CancelTamanhoButton">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalDeletarTamanho">
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <strong>Deletar Tamanho</strong>
        </ModalHeader>
        <ModalBody>
            @if (_tamanhoDtoSelecionado != null)
            {
                <p>Tem certeza que deseja deletar o tamanho @_tamanhoDtoSelecionado.Nome?</p>
            }
        </ModalBody>
        <ModalFooter>
            <Button class="btn btn-danger" @onclick="DeleteTamanhoButton">Deletar</Button>
            <Button class="btn btn-secondary" @onclick="CancelTamanhoButton">Cancelar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code
{
    private List<TamanhoDto> tamanhos;
    private Modal modalCriarTamanho = new Modal();
    private Modal modalAtualizarTamanho = new Modal();
    private Modal modalDeletarTamanho = new Modal();
    private TamanhoDto _tamanhoDtoSelecionado;
    private string atualizarTamanhoNome;
    private string atualizarTamanhoDescricao;
    private string NovoTamanhoNome;
    private string NovoTamanhoDescricao;

    protected override async Task OnInitializedAsync()
    {
        tamanhos = await TamanhoService.ListarTamanhos();
    }

    private void AbrirModalAdicionarTamanho()
    {
        NovoTamanhoNome = string.Empty;
        NovoTamanhoDescricao = string.Empty;
        modalCriarTamanho.Show();
    }

    private void AbrirModalAtualizarTamanho(TamanhoDto tamanhoDto)
    {
        _tamanhoDtoSelecionado = tamanhoDto;
        NovoTamanhoNome = tamanhoDto.Nome;
        NovoTamanhoDescricao = tamanhoDto.Descricao;
        modalAtualizarTamanho.Show();
    }

    private void CancelTamanhoButton()
    {
        NovoTamanhoNome = string.Empty;
        NovoTamanhoDescricao = string.Empty;
        modalCriarTamanho.Hide();
        modalAtualizarTamanho.Hide();
        modalDeletarTamanho.Hide();
    }

    private async Task InsertTamanhoButton()
    {
        TamanhoDto tamanhoDto = new TamanhoDto
        {
            Nome = NovoTamanhoNome,
            Descricao = NovoTamanhoDescricao,
        };
        await TamanhoService.AdicionarTamanho(tamanhoDto);
        tamanhos = await TamanhoService.ListarTamanhos();
        modalCriarTamanho.Hide();
    }

    private async Task UpdateTamanhoButton()
    {
        _tamanhoDtoSelecionado.Nome = atualizarTamanhoNome;
        _tamanhoDtoSelecionado.Descricao = atualizarTamanhoDescricao;
        await TamanhoService.AtualizarTamanho(_tamanhoDtoSelecionado);
        tamanhos = await TamanhoService.ListarTamanhos();
        modalAtualizarTamanho.Hide();
    }

    private void OptionDeleteTamanhoButton(TamanhoDto tamanhoDto)
    {
        _tamanhoDtoSelecionado = tamanhoDto;
        modalDeletarTamanho.Show();
    }

    private async Task DeleteTamanhoButton()
    {
        await TamanhoService.DeletarTamanho(_tamanhoDtoSelecionado.Id);
        tamanhos = await TamanhoService.ListarTamanhos();
        modalDeletarTamanho.Hide();
    }
}